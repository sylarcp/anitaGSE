#!/bin/sh 

# This is a script that autogenerates the appropriate config files for
# other scripts in this distribution. 
#
# $Source: /cvsroot/anita-lite/gse/configure,v $
# $Date: 2003/12/15 21:44:05 $
# $Revision: 1.9 $
# $Author: predragm $
#

############### PLEASE EDIT THE FOLLOWING SECTION #########################
# Where do you want to store raw, binary incoming telemetry data stream?
DATA_DIR=/data/data/ANITA-ANTARTICA

# Where do you want to store logs resulting from telemetry data processing
# If left blank, default is $DATA_DIR/log
LOG_DIR=

# Where do you want to place html interface files and scripts for monitoring.
# If left blank, default is current anitagse/html directory.
#HTML_DIR=/home/anitaweb
HTML_DIR=/var/www/html/anita

# Where do you want to store file links which will communicate arrival of
# new data to telemetry handling daemons. No other files should appear in 
# this directory. If left blank, default is $DATA_DIR/link
LINK_DIR=

# How old can unprocessed files be? If a telemetry file is received and still 
# unprocessed after this age, given in seconds, it will be removed from a queue.
# A file can be resurrected to a queue if it is empty.
AGE_CUT=300

# Where do you want to store unpacked packets on a file system. If left blank,
# default is $DATA_DIR/telem
TELEM_DIR=

# Basename for the database to store data into. Current UTC date will be 
# appended in form $DBBASE_MMDD
DBBASE=anita

# If 'tcpserver' and 'tcpclient' commands from ucspi-tcp package are not
# installed in some standard directory, specify their location here. 
# If they are in someplace like /usr/local/bin, you may leave this blank.
TCPSERVICES_DIR=

# Specify location of daemontools package executables, even if in the 
# regular serach path
DAEMONTOOLS_DIR=/usr/local/bin

# If you wish to fanout the received data to other institutions, enter
# the appropriate IPs in the list below, in a format
# "'xxx.xxx.xxx.xxx','yyy.yyy.yyy.yyy',...."
#FANOUT_IPS="'128.171.30.36','128.171.30.67'"
#FANOUT_IPS="'128.171.30.36','128.171.30.67','128.200.48.50'"
FANOUT_IPS="'128.175.112.80','192.168.20.222'"
# FANOUT_IPS=

# Specify port to use to receive (and send data on). Shouldn't be changed
# in general. 
PORT=7740

###### THANK YOU! 
#############################################################################
# WARNING! Don't edit below this line
#############################################################################

# First store our base directory 
PWD=`pwd`

# Number of processors
CPUS=`cat /proc/cpuinfo | grep processor | wc -l`

# Create directories we need 
if test ! -e $DATA_DIR; then
    mkdir -p $DATA_DIR
fi
if test ! "$LOG_DIR"; then 
    LOG_DIR=$DATA_DIR/log
fi
if test ! -e $LOG_DIR; then
    mkdir -p $LOG_DIR
fi
if test "$HTML_DIR"; then 
    if test ! -e $HTML_DIR; then
	mkdir -p $HTML_DIR
    fi
#else 
#    HTML_DIR=html
fi
if test ! "$LINK_DIR"; then 
    LINK_DIR=$DATA_DIR/link
fi
if test ! -e $LINK_DIR; then
    mkdir -p $LINK_DIR/old
fi
if test ! "$TELEM_DIR"; then 
    TELEM_DIR=$DATA_DIR/telem
fi
if test ! -e $TELEM_DIR; then
    mkdir -p $TELEM_DIR
fi

# Link pedestal and default HKD values files to fixed location on the system, 
# /tmp should be safe
ln -sf $PWD/pedValues.txt /tmp
ln -sf $PWD/hkdValues.txt /tmp
ln -sf $PWD/sshkdValues.txt /tmp

# Generate Perl like configuration file for html scripts
PiConf=$PWD/html/AnitaLocalConfig.pi
rm -f $PiConf
echo \# This is autogenerated file. Do not edit! Edit and execute \'gseconf\' > $PiConf
echo \$link_dir = \'$LINK_DIR\'\; >> $PiConf

# Copy html scripts into active html directory and create /tmp link
if test "$HTML_DIR"; then
    cp -av html/*.html html/*.cgi html/*.pi $HTML_DIR
    sed -i "s/ddm_gsever/`cat VERSION`/;s/ddm_pgver/`pg_config --version | cut -f 2 -d' '`/;s/ddm_svnver/`svnversion .`/;" $HTML_DIR/title.cgi
    ln -sf /tmp $HTML_DIR/tmp	
else
    ln -sf /tmp html/tmp
fi

# Generate Perl like configuration file for receive_data.pl
PiConf=$PWD/tcp/AnitaLocalConfig.pi
rm -f $PiConf
echo \# This is autogenerated file. Do not edit! Edit and execute \'gseconf\' > $PiConf
echo \$target_dir = \'$DATA_DIR\'\; >> $PiConf
echo \$fanout_dir = \"\$target_dir/fanout\"\; >> $PiConf
echo "@fanoutList = ($FANOUT_IPS);" >> $PiConf
if test "$TCPSERVICES_DIR"; then
    echo \$tcpclient = \'$TCPSERVICES_DIR/tcpclient\'\; >> $PiConf
else
    echo \$tcpclient = \'tcpclient\'\; >> $PiConf
fi
echo \$link_dir = \'$LINK_DIR\'\; >> $PiConf
echo \$port = $PORT\; >> $PiConf
echo \$filename_pipe = \'$PWD/tcp/filenames\'\; >> $PiConf

# Generate 'tcp/receive.sh' script which will actually listen for data
tcpScript=$PWD/tcp/receive.sh 
rm -f $tcpScript
echo \#!/bin/sh > $tcpScript
echo PORT=$PORT >> $tcpScript
echo HANDLER=$PWD/tcp/receive_data.pl >> $tcpScript
echo "exec 2>&1" >> $tcpScript
if test "$TCPSERVICES_DIR"; then
    echo exec $TCPSERVICES_DIR/tcpserver -v -R -x $PWD/tcp/rules.cdb  0 \$PORT \$HANDLER >> $tcpScript
else
    echo exec tcpserver -v -R -x $PWD/tcp/rules.cdb  0 \$PORT \$HANDLER >> $tcpScript
fi
chmod a+x $tcpScript

# Generate ./local.config for configuring gsecontrol script
localConfig=$PWD/local.config
rm -f $PWD/local.config
echo PWD=$PWD > $localConfig
echo DAEMONTOOLS_DIR=$DAEMONTOOLS_DIR >> $localConfig
echo FILENAME_PIPE=$PWD/tcp/filenames >> $localConfig
echo LINK_DIR=$LINK_DIR >> $localConfig
echo AGE_CUT=$AGE_CUT >> $localConfig
echo LOG_DIR=$LOG_DIR >> $localConfig
echo TELEM_DIR=$TELEM_DIR >> $localConfig
echo DBBASE=$DBBASE >> $localConfig

# Finally, run some setup tasks
# Process TCP rules permissions file
if test "$TCPSERVICES_DIR"; then
    TCPRULES=$TCPSERVICES_DIR/tcprules
else
    TCPRULES=tcprules
fi
if eval which $TCPRULES > /dev/null 2>&1; then
    $TCPRULES $PWD/tcp/rules.cdb $PWD/tcp/rules.tmp < $PWD/tcp/rules
else
echo "Couldn't find 'tcprules'. You shouldn't run tcp server with 'tcp/receive.sh'!"
fi
# Create directories and scripts that daemontools will use to control daemons
if test $CPUS -gt 9 ; then 
  ln -sf gsecontrol_ten gsecontrol
elif test $CPUS -gt 4 ; then 
  ln -sf gsecontrol_five gsecontrol
elif test $CPUS -gt 1 ; then 
  ln -sf gsecontrol_smp gsecontrol
else
  ln -sf gsecontrol_single gsecontrol
fi

$PWD/gsecontrol setup

